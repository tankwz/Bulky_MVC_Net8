@model ProductVM

<div class="card shadow border-0 my-4">
    <div class="card-header bg-gradient py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2"> @(Model.Product.Id != 0 ? "Update" : "Create") Product</h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4 border-2">

        <form method="post" enctype="multipart/form-data">
            <input asp-for="Product.Id" ></input>
            <input asp-for="Product.ImageUrl"></input>

            <div class="border p-3 my-4">
                <div class="row ">
                    <div class="col-2 my-3 ">

                        <img class="" src="@Model.Product.ImageUrl" width="100%"
                             style="border-radius:5px; border:1px solid #bbb9b9" />

                    </div>
                    <div class="col-10">
                        <div class="mb-3 p-1 w-50">
                            <label asp-for="Product.ImageUrl" class="form-label"></label>
                            <input type="file" name="file" class="form-control" ></input>
                        </div>
                        <div class="input-group">
                            <div class="mb-3 p-1">
                                <label asp-for="Product.Title" class="form-label"></label>
                                <input asp-for="Product.Title" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.Title" class="text-danger"></span>
                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="Product.ISBN" class="form-label"></label>
                                <input asp-for="Product.ISBN" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="Product.Author" class="form-label"></label>
                                <input asp-for="Product.Author" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.Author" class="text-danger"></span>
                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="@Model.Product.CategoryID" class="form-label"></label>
                                <select asp-for="@Model.Product.CategoryID" class="form-select" asp-items="@Model.CategoryList">
                                    @* asp-items="ViewBag.Bagcategory" *@
                                    @*                         asp-items="@(ViewData["Bagcategory"] as IEnumerable<SelectListItem>)  " *@
                                    <option disabled selected>--Select Category--</option>
                                </select>
                                @*                    <span asp-validation-for="Price100" class="text-danger"></span> *@
                            </div>


                        </div>

                        <div class="input-group">
                            <div class="mb-3 p-1">
                                <label asp-for="Product.ListPrice" class="form-label"></label>
                                <input asp-for="Product.ListPrice" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>

                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="Product.Price" class="form-label"></label>
                                <input asp-for="Product.Price" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.Price" class="text-danger"></span>

                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="Product.Price50" class="form-label"></label>
                                <input asp-for="Product.Price50" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.Price50" class="text-danger"></span>

                            </div>
                            <div class="mb-3 p-1">
                                <label asp-for="Product.Price100" class="form-label"></label>
                                <input asp-for="Product.Price100" class="form-control" type="text"></input>
                                <span asp-validation-for="Product.Price100" class="text-danger"></span>
                            </div>

                        </div>
                     
                    </div>
                <div class="container ">
                        <div class="mx-3 p-1">
                            <label asp-for="Product.Description" class="form-label text-muted"></label>
                            <textarea asp-for="Product.Description" class="form-control" type=""></textarea>
                            <span asp-validation-for="Product.Description" class="text-danger"></span>
                        </div>
                        <div class="row p-1 justify-content-between">
                            <div class="col-3  ">
                                <a asp-controller="Product" asp-action="Index" class="btn btn-secondary form-control">Back</a>
                            </div>
                            @if (Model.Product.Id != 0)
                            {
                                <div class="col-3 ">
                                    <button class="btn btn-primary form-control ">Update</button>
                                </div>
                            }
                            else
                            {
                                <div class="col-3 ">
                                    <button class="btn btn-primary form-control ">Create</button>
                                </div>
                            }

                        </div>
                </div>
                </div>

            </div>
        </form>
    </div>


</div>

@section Scripts{
    <script>
        // tinymce.PluginManager.add('customplugin', function (editor) {
        //     editor.on('BeforeSetContent', function (e) {
        //         e.content = e.content.replace(/<p>/g, '').replace(/<\/p>/g, '');
        //     });

        //     editor.on('GetContent', function (e) {
        //         e.content = e.content.replace(/<p>/g, '').replace(/<\/p>/g, '');
        //     });
        // });

        tinymce.init({
            selector: "textarea",
            plugins: 'customplugin',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat'
        });
    </script>

    @{
        <partial name="_ValidationScriptsPartial" />
    }


}


@*     public int Id { get; set; }
    [Required]
    public string Title { get; set; }
    public string Description { get; set; }
    [Required]
    public string ISBN { get; set; }

    [Required]
    public string Author { get; set; }

    [Required, Display(Name ="List Price"),Range(1,1000)]
    public double ListPrice { get; set; }
    [Required, Display(Name = "Price for 1-50"), Range(1, 1000)]
    public double Price { get; set; }
    [Required, Display(Name = "Price for 50-100"), Range(1, 1000)]
    public double Price50 { get; set; }
    [Required, Display(Name = "Price for 100+"), Range(1, 1000)]
    public double Price100 { get; set; }
 *@
